#!/bin/sh
# Kext-Droplet
# Copyright (c) 2019, chris1111. All Right Reserved
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# Vars
SLEDir="/System/Library/Extensions"
LEDir="/Library/Extensions"
TempDir="/Private/tmp/Install"
BULEDir="$HOME/Desktop/BackupKext_LE"
BUSLEDir="$HOME/Desktop/BackupKext_SLE"
apptitle="Kext-Droplet"
version="1.2"
# Set Icon directory and file 
iconfile="System/Library/CoreServices/CoreTypes.bundle/Contents/Resources/KEXT.icns"
echo " "

echo "
******************************************************
Kext-Droplet
******************************************************"
# Set Droping directory and file
for files in "$@" ;do

if [ "/Private/tmp/Install" ]; then
	rm -rf "/Private/tmp/Install"
fi

mkdir -p "${TempDir}"
Sleep 1

cp -R "$@" "${TempDir}"

echo "Prepare Installation for:"
for file in "${TempDir}"/*;
do
echo "${file##*/}"
done


Sleep 2
# Select Choice
response=$(osascript -e 'tell app "System Events" to display dialog "Kext-Droplet is a utility that allows you
to install your kexts in all security in
System Library Extensions or
Library Extensions.
Kext file, bundle and plugin are allow.
NOTE: The files are overwritten if they exist, 
bundle files and plugin are install in S/L/E only.
A backup of the original files is performed.

Choose where you want to install the kexts!

S/L/E ➣ /System/Library/Extensions/ 
L/E ➣ /Library/Extensions/" buttons {"Cancel","SLE","LE"} default button 1 with title "'"$apptitle"' '"$version"'" with icon POSIX file "'"$iconfile"'"  ')

action=$(echo $response | cut -d ':' -f2)

  #  Exit if Canceled
  if [ "$action" == "Cancel" ] ; then
    osascript -e 'display notification "Program closing" with title "'"$apptitle"'" subtitle "User cancelled"'     
     exit 0
  fi
 

  #  Library Extensions is user select LE
  if [ "$action" == "LE" ] ; then
sleep 2
echo "Verifying Kexts for /Library/Extensions/:"
if [ -e "${3}/Library/Extensions/${file##*/}"  ]; then
echo "Find ${file##*/} ➣ Save Kext for (LE)"
mkdir -p ~/Desktop/BackupKext_LE
for file in "${TempDir}"/*; 
do
Sleep 3
rsync -ab "${TempDir}"/${file##*/} "$BULEDir";
mv "$BULEDir" "${BULEDir}"`date "+%Y%m%d_%H%M%S"`
done
fi

osascript -e 'do shell script "/chown -R root:wheel /Private/tmp/Install/*.kext" with administrator privileges'
osascript -e 'do shell script "chmod -R 755 /Private/tmp/Install/*.kext" with administrator privileges'


MavericksMajorVersion="13"
YosemiteMajorVersion="14"
EICapitanMajorVersion="15"
SierraMajorVersion="16"
HighSierraMajorVersion="17"
MojaveMajorVersion="18"
CatalinaMajorVersion="19"

ThisVersion=`uname -r`
echo ThisVersion=$ThisVersion

ThisMajorVersion=${ThisVersion:0:2}
echo ThisMajorVersion=$ThisMajorVersion

case $ThisMajorVersion in
	$MavericksMajorVersion)		OsName="Mavericks";;
	$YosemiteMajorVersion)		OsName="Yosemite";;
	$EICapitanMajorVersion)		OsName="EICapitan";;
	$SierraMajorVersion)		OsName="Sierra";;
	$HighSierraMajorVersion)	OsName="HighSierra";;
	$MojaveMajorVersion)		OsName="Mojave";;
    $CatalinaMajorVersion)		OsName="Catalina";;
esac



if [ $ThisMajorVersion == $MavericksMajorVersion ]
then
echo "Equal than Mavericks"
echo "No need to put the Disk in R/W"
Sleep 2
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.kext /Library/Extensions/" with administrator privileges' 
echo "Kext Cache repair! Please wait. ."
Sleep 1
osascript -e 'do shell script "sudo touch /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -system-prelinked-kernel" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -system-caches" with administrator privileges'
fi


if [ $ThisMajorVersion == $YosemiteMajorVersion ]
then
echo "Equal than Yosemite"
echo "No need to put the Disk in R/W"
Sleep 2
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.kext /Library/Extensions/" with administrator privileges' 
echo "Kext Cache repair! Please wait. ."
Sleep 1
osascript -e 'do shell script "sudo touch /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -system-prelinked-kernel" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -system-caches" with administrator privileges'
fi


if [ $ThisMajorVersion == $EICapitanMajorVersion ]
then
echo "Equal than EICapitan"
echo "No need to put the Disk in R/W"
echo "Verifying SIP"
Sleep 2
function vertifySIP {
	echo -n "Verifying SIP..."
	if [[ "$(csrutil status | grep "System Integrity Protection status: disabled." | wc -l)" == "       0" && "$(csrutil status | grep "Filesystem Protections: disabled" | wc -l)" == "       0" ]]; then
		echo ""
osascript -e 'tell app "System Events" to display dialog "SIP is enabled on this system. Please boot into Recovery HD or an Installer USB drive, open a new Terminal Window, and enter csrutil disable. If you use Clover, you must put in the config.plist CsrActiveConfig ➢ 0x3E7
When completed, reboot back into your standard macOS install, and run this Program again." with icon file "System:Library:CoreServices:CoreTypes.bundle:Contents:Resources:FileVaultIcon.icns" buttons {"OK"} default button 1 with title "Kext-Droplet (Error SIP Enable)"'

osascript -e 'display notification "Program closing" sound name "default" with title "'"$apptitle"'" subtitle "SIP is Enable"'
echo "QUITAPP"
exit 0
		return 1
	fi
	return 0		
		
}

vertifySIP
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.kext /Library/Extensions/" with administrator privileges' 
echo "Kext Cache repair! Please wait. ."
Sleep 1
osascript -e 'do shell script "sudo touch /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -u /" with administrator privileges'
fi


if [ $ThisMajorVersion == $SierraMajorVersion ]
then
echo "Equal than Sierra"
echo "No need to put the Disk in R/"
echo "Verifying SIP"
Sleep 2
function vertifySIP {
	echo -n "Verifying SIP..."
	if [[ "$(csrutil status | grep "System Integrity Protection status: disabled." | wc -l)" == "       0" && "$(csrutil status | grep "Filesystem Protections: disabled" | wc -l)" == "       0" ]]; then
		echo ""
osascript -e 'tell app "System Events" to display dialog "SIP is enabled on this system. Please boot into Recovery HD or an Installer USB drive, open a new Terminal Window, and enter csrutil disable. If you use Clover, you must put in the config.plist CsrActiveConfig ➢ 0x3E7
When completed, reboot back into your standard macOS install, and run this Program again." with icon file "System:Library:CoreServices:CoreTypes.bundle:Contents:Resources:FileVaultIcon.icns" buttons {"OK"} default button 1 with title "Kext-Droplet (Error SIP Enable)"'

osascript -e 'display notification "Program closing" sound name "default" with title "'"$apptitle"'" subtitle "SIP is Enable"'
echo "QUITAPP"
exit 0
		return 1
	fi
	return 0		
		
}

vertifySIP
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.kext /Library/Extensions/" with administrator privileges' 
echo "Kext Cache repair! Please wait. ."
Sleep 1
osascript -e 'do shell script "sudo touch /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -u /" with administrator privileges'
fi


if [ $ThisMajorVersion == $HighSierraMajorVersion ]
then
echo "Equal than HighSierra"
echo "No need to put the Disk in R/W"
echo "Verifying SIP"
Sleep 2
function vertifySIP {
	echo -n "Verifying SIP..."
	if [[ "$(csrutil status | grep "System Integrity Protection status: disabled." | wc -l)" == "       0" && "$(csrutil status | grep "Filesystem Protections: disabled" | wc -l)" == "       0" ]]; then
		echo ""
osascript -e 'tell app "System Events" to display dialog "SIP is enabled on this system. Please boot into Recovery HD or an Installer USB drive, open a new Terminal Window, and enter csrutil disable. If you use Clover, you must put in the config.plist CsrActiveConfig ➢ 0x3E7
When completed, reboot back into your standard macOS install, and run this Program again." with icon file "System:Library:CoreServices:CoreTypes.bundle:Contents:Resources:FileVaultIcon.icns" buttons {"OK"} default button 1 with title "Kext-Droplet (Error SIP Enable)"'

osascript -e 'display notification "Program closing" sound name "default" with title "'"$apptitle"'" subtitle "SIP is Enable"'
echo "QUITAPP"
exit 0
		return 1
	fi
	return 0		
		
}

vertifySIP
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.kext /Library/Extensions/" with administrator privileges' 
echo "Kext Cache repair! Please wait. ."
Sleep 1
osascript -e 'do shell script "sudo touch /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -u /" with administrator privileges'
fi


if [ $ThisMajorVersion == $MojaveMajorVersion ]
then
echo "Equal than Mojave"
echo "No need to put the Disk in R/W"
echo "Verifying SIP"
Sleep 2
function vertifySIP {
	echo -n "Verifying SIP..."
	if [[ "$(csrutil status | grep "System Integrity Protection status: disabled." | wc -l)" == "       0" && "$(csrutil status | grep "Filesystem Protections: disabled" | wc -l)" == "       0" ]]; then
		echo ""
osascript -e 'tell app "System Events" to display dialog "SIP is enabled on this system. Please boot into Recovery HD or an Installer USB drive, open a new Terminal Window, and enter csrutil disable. If you use Clover, you must put in the config.plist CsrActiveConfig ➢ 0x3E7
When completed, reboot back into your standard macOS install, and run this Program again." with icon file "System:Library:CoreServices:CoreTypes.bundle:Contents:Resources:FileVaultIcon.icns" buttons {"OK"} default button 1 with title "Kext-Droplet (Error SIP Enable)"'

osascript -e 'display notification "Program closing" sound name "default" with title "'"$apptitle"'" subtitle "SIP is Enable"'
echo "QUITAPP"
exit 0
		return 1
	fi
	return 0		
		
}

vertifySIP
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.kext /Library/Extensions/" with administrator privileges' 
echo "Kext Cache repair! Please wait. ."
Sleep 1
osascript -e 'do shell script "sudo touch /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -u /" with administrator privileges'
fi


if [ $ThisMajorVersion == $CatalinaMajorVersion ]
then
echo "Equal than Catalina"
echo "Put the Disk in R/W for Catalina"
echo "Verifying SIP"
Sleep 2
function vertifySIP {
	echo -n "Verifying SIP..."
	if [[ "$(csrutil status | grep "System Integrity Protection status: disabled." | wc -l)" == "       0" && "$(csrutil status | grep "Filesystem Protections: disabled" | wc -l)" == "       0" ]]; then
		echo ""
osascript -e 'tell app "System Events" to display dialog "SIP is enabled on this system. Please boot into Recovery HD or an Installer USB drive, open a new Terminal Window, and enter csrutil disable. If you use Clover, you must put in the config.plist CsrActiveConfig ➢ 0x3E7
When completed, reboot back into your standard macOS install, and run this Program again." with icon file "System:Library:CoreServices:CoreTypes.bundle:Contents:Resources:FileVaultIcon.icns" buttons {"OK"} default button 1 with title "Kext-Droplet (Error SIP Enable)"'

osascript -e 'display notification "Program closing" sound name "default" with title "'"$apptitle"'" subtitle "SIP is Enable"'
echo "QUITAPP"
exit 0
		return 1
	fi
	return 0		
		
}

vertifySIP
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.kext /Library/Extensions/" with administrator privileges' 
echo "Kext Cache repair! Please wait. ."
Sleep 1
osascript -e 'do shell script "sudo touch /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -u /" with administrator privileges'
fi

Sleep 2
osascript -e 'do shell script "rm -r /Private/tmp/Install" with administrator privileges'
echo "Verification System version"

echo " "
osascript -e 'tell app "System Events" to display dialog "You have to restart your machine!" with icon file "System:Library:CoreServices:CoreTypes.bundle:Contents:Resources:FinderIcon.icns" buttons {"Restart"} default button 1 with title "Restart"'
Sleep 1
osascript ./Reboot.app
exit 0
  fi


# Select SLE
response=$(osascript -e 'tell app "System Events" to display dialog "Select SLE to install your kexts in /System/Library/Extensions/ 
 
Cancel for Quit" buttons {"Cancel","SLE"} default button 2 with title "'"$apptitle"' '"$version"'" with icon POSIX file "'"$iconfile"'"  ')

action=$(echo $response | cut -d ':' -f2)

#  Exit if Canceled
  if [ "$action" == "Cancel" ] ; then
    osascript -e 'display notification "Program closing" with title "'"$apptitle"'" subtitle "User cancelled"'     
     exit 0
  fi

echo "Root for installing kexts in S/L/E:"

sleep 1
### System Library Extensions is user select SLE
if [ "$action" == "SLE" ] ; then
echo "Verifying Kexts for /System/Library/Extensions/:"
if [ -e "${3}/System/Library/Extensions/${file##*/}"  ]; then
echo "Find ${file##*/} ➣ Save Kext for (SLE)"
mkdir -p ~/Desktop/BackupKext_SLE
for file in "${TempDir}"/*;
do
Sleep 3
rsync -ab "${TempDir}"/${file##*/} "$BUSLEDir";
mv "$BUSLEDir" "${BUSLEDir}"`date "+%Y%m%d_%H%M%S"`
done
fi

osascript -e 'do shell script "/chown -R root:wheel /Private/tmp/Install/*.kext" with administrator privileges'
osascript -e 'do shell script "chmod -R 755 /Private/tmp/Install/*.kext" with administrator privileges'
osascript -e 'do shell script "/chown -R root:wheel /Private/tmp/Install/*.plugin" with administrator privileges'
osascript -e 'do shell script "chmod -R 755 /Private/tmp/Install/*.plugin" with administrator privileges'
osascript -e 'do shell script "/chown -R root:wheel /Private/tmp/Install/*.bundle" with administrator privileges'
osascript -e 'do shell script "chmod -R 755 /Private/tmp/Install/*.bundle" with administrator privileges'



MavericksMajorVersion="13"
YosemiteMajorVersion="14"
EICapitanMajorVersion="15"
SierraMajorVersion="16"
HighSierraMajorVersion="17"
MojaveMajorVersion="18"
CatalinaMajorVersion="19"

ThisVersion=`uname -r`
echo ThisVersion=$ThisVersion

ThisMajorVersion=${ThisVersion:0:2}
echo ThisMajorVersion=$ThisMajorVersion

case $ThisMajorVersion in
	$MavericksMajorVersion)		OsName="Mavericks";;
	$YosemiteMajorVersion)		OsName="Yosemite";;
	$EICapitanMajorVersion)		OsName="EICapitan";;
	$SierraMajorVersion)		OsName="Sierra";;
	$HighSierraMajorVersion)	OsName="HighSierra";;
	$MojaveMajorVersion)		OsName="Mojave";;
    $CatalinaMajorVersion)		OsName="Catalina";;
esac



if [ $ThisMajorVersion == $MavericksMajorVersion ]
then
echo "Equal than Mavericks"
echo "No need to put the Disk in R/W"
Sleep 2
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.kext /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.plugin /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.bundle /System/Library/Extensions/" with administrator privileges'
echo "Kext Cache repair! Please wait. ."
Sleep 1
osascript -e 'do shell script "sudo touch /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -system-prelinked-kernel" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -system-caches" with administrator privileges'
fi


if [ $ThisMajorVersion == $YosemiteMajorVersion ]
then
echo "Equal than Yosemite"
echo "No need to put the Disk in R/W"
Sleep 2
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.kext /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.plugin /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.bundle /System/Library/Extensions/" with administrator privileges'
echo "Kext Cache repair! Please wait. ."
Sleep 1
osascript -e 'do shell script "sudo touch /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -system-prelinked-kernel" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -system-caches" with administrator privileges'
fi


if [ $ThisMajorVersion == $EICapitanMajorVersion ]
then
echo "Equal than EICapitan"
echo "No need to put the Disk in R/W"
echo "Verifying SIP"
Sleep 2
function vertifySIP {
	echo -n "Verifying SIP..."
	if [[ "$(csrutil status | grep "System Integrity Protection status: disabled." | wc -l)" == "       0" && "$(csrutil status | grep "Filesystem Protections: disabled" | wc -l)" == "       0" ]]; then
		echo ""
osascript -e 'tell app "System Events" to display dialog "SIP is enabled on this system. Please boot into Recovery HD or an Installer USB drive, open a new Terminal Window, and enter csrutil disable. If you use Clover, you must put in the config.plist CsrActiveConfig ➢ 0x3E7
When completed, reboot back into your standard macOS install, and run this Program again." with icon file "System:Library:CoreServices:CoreTypes.bundle:Contents:Resources:FileVaultIcon.icns" buttons {"OK"} default button 1 with title "Kext-Droplet (Error SIP Enable)"'

osascript -e 'display notification "Program closing" sound name "default" with title "'"$apptitle"'" subtitle "SIP is Enable"'
echo "QUITAPP"
exit 0
		return 1
	fi
	return 0		
		
}

vertifySIP
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.kext /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.plugin /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.bundle /System/Library/Extensions/" with administrator privileges'
echo "Kext Cache repair! Please wait. ."
Sleep 1
osascript -e 'do shell script "sudo touch /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -u /" with administrator privileges'
fi


if [ $ThisMajorVersion == $SierraMajorVersion ]
then
echo "Equal than Sierra"
echo "No need to put the Disk in R/"
echo "Verifying SIP"
Sleep 2
function vertifySIP {
	echo -n "Verifying SIP..."
	if [[ "$(csrutil status | grep "System Integrity Protection status: disabled." | wc -l)" == "       0" && "$(csrutil status | grep "Filesystem Protections: disabled" | wc -l)" == "       0" ]]; then
		echo ""
osascript -e 'tell app "System Events" to display dialog "SIP is enabled on this system. Please boot into Recovery HD or an Installer USB drive, open a new Terminal Window, and enter csrutil disable. If you use Clover, you must put in the config.plist CsrActiveConfig ➢ 0x3E7
When completed, reboot back into your standard macOS install, and run this Program again." with icon file "System:Library:CoreServices:CoreTypes.bundle:Contents:Resources:FileVaultIcon.icns" buttons {"OK"} default button 1 with title "Kext-Droplet (Error SIP Enable)"'

osascript -e 'display notification "Program closing" sound name "default" with title "'"$apptitle"'" subtitle "SIP is Enable"'
echo "QUITAPP"
exit 0
		return 1
	fi
	return 0		
		
}

vertifySIP
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.kext /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.plugin /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.bundle /System/Library/Extensions/" with administrator privileges'
echo "Kext Cache repair! Please wait. ."
Sleep 1
osascript -e 'do shell script "sudo touch /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -u /" with administrator privileges'
fi


if [ $ThisMajorVersion == $HighSierraMajorVersion ]
then
echo "Equal than HighSierra"
echo "No need to put the Disk in R/W"
echo "Verifying SIP"
Sleep 2
function vertifySIP {
	echo -n "Verifying SIP..."
	if [[ "$(csrutil status | grep "System Integrity Protection status: disabled." | wc -l)" == "       0" && "$(csrutil status | grep "Filesystem Protections: disabled" | wc -l)" == "       0" ]]; then
		echo ""
osascript -e 'tell app "System Events" to display dialog "SIP is enabled on this system. Please boot into Recovery HD or an Installer USB drive, open a new Terminal Window, and enter csrutil disable. If you use Clover, you must put in the config.plist CsrActiveConfig ➢ 0x3E7
When completed, reboot back into your standard macOS install, and run this Program again." with icon file "System:Library:CoreServices:CoreTypes.bundle:Contents:Resources:FileVaultIcon.icns" buttons {"OK"} default button 1 with title "Kext-Droplet (Error SIP Enable)"'

osascript -e 'display notification "Program closing" sound name "default" with title "'"$apptitle"'" subtitle "SIP is Enable"'
echo "QUITAPP"
exit 0
		return 1
	fi
	return 0		
		
}

vertifySIP
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.kext /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.plugin /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.bundle /System/Library/Extensions/" with administrator privileges'
echo "Kext Cache repair! Please wait. ."
Sleep 1
osascript -e 'do shell script "sudo touch /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -u /" with administrator privileges'
fi


if [ $ThisMajorVersion == $MojaveMajorVersion ]
then
echo "Equal than Mojave"
echo "No need to put the Disk in R/W"
echo "Verifying SIP"
Sleep 2
function vertifySIP {
	echo -n "Verifying SIP..."
	if [[ "$(csrutil status | grep "System Integrity Protection status: disabled." | wc -l)" == "       0" && "$(csrutil status | grep "Filesystem Protections: disabled" | wc -l)" == "       0" ]]; then
		echo ""
osascript -e 'tell app "System Events" to display dialog "SIP is enabled on this system. Please boot into Recovery HD or an Installer USB drive, open a new Terminal Window, and enter csrutil disable. If you use Clover, you must put in the config.plist CsrActiveConfig ➢ 0x3E7
When completed, reboot back into your standard macOS install, and run this Program again." with icon file "System:Library:CoreServices:CoreTypes.bundle:Contents:Resources:FileVaultIcon.icns" buttons {"OK"} default button 1 with title "Kext-Droplet (Error SIP Enable)"'

osascript -e 'display notification "Program closing" sound name "default" with title "'"$apptitle"'" subtitle "SIP is Enable"'
echo "QUITAPP"
exit 0
		return 1
	fi
	return 0		
		
}

vertifySIP
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.kext /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.plugin /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.bundle /System/Library/Extensions/" with administrator privileges'
echo "Kext Cache repair! Please wait. ."
Sleep 1
osascript -e 'do shell script "sudo touch /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -u /" with administrator privileges'
fi


if [ $ThisMajorVersion == $CatalinaMajorVersion ]
then
echo "Equal than Catalina"
echo "Put the Disk in R/W for Catalina"
echo "Verifying SIP"
Sleep 2
function vertifySIP {
	echo -n "Verifying SIP..."
	if [[ "$(csrutil status | grep "System Integrity Protection status: disabled." | wc -l)" == "       0" && "$(csrutil status | grep "Filesystem Protections: disabled" | wc -l)" == "       0" ]]; then
		echo ""
osascript -e 'tell app "System Events" to display dialog "SIP is enabled on this system. Please boot into Recovery HD or an Installer USB drive, open a new Terminal Window, and enter csrutil disable. If you use Clover, you must put in the config.plist CsrActiveConfig ➢ 0x3E7
When completed, reboot back into your standard macOS install, and run this Program again." with icon file "System:Library:CoreServices:CoreTypes.bundle:Contents:Resources:FileVaultIcon.icns" buttons {"OK"} default button 1 with title "Kext-Droplet (Error SIP Enable)"'

osascript -e 'display notification "Program closing" sound name "default" with title "'"$apptitle"'" subtitle "SIP is Enable"'
echo "QUITAPP"
exit 0
		return 1
	fi
	return 0		
		
}

vertifySIP
osascript -e 'do shell script "mount -uw /" with administrator privileges'
Sleep 1
killall Finder
Sleep 2
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.kext /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.plugin /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "cp -r /Private/tmp/Install/*.bundle /System/Library/Extensions/" with administrator privileges'
echo "Kext Cache repair! Please wait. ."
Sleep 1
osascript -e 'do shell script "sudo touch /System/Library/Extensions/" with administrator privileges'
osascript -e 'do shell script "sudo kextcache -u /" with administrator privileges'
fi

Sleep 2
osascript -e 'do shell script "rm -r /Private/tmp/Install" with administrator privileges'
echo "Verification System version"

echo " "
osascript -e 'tell app "System Events" to display dialog "You have to restart your machine!" with icon file "System:Library:CoreServices:CoreTypes.bundle:Contents:Resources:FinderIcon.icns" buttons {"Restart"} default button 1 with title "Restart"'
Sleep 1
osascript ./Reboot.app

 
    exit 0
  fi

done
